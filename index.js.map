{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from \"axios\";\nconst API_KEY = `49323961-66159e96cf1899f53bae32983`;\nconst BASE_URL = `https://pixabay.com/api/`;\n\nexport async function fetchImages(query, page = 1, perPage = 15) {\n    try {\n      const response = await axios.get(BASE_URL, {\n        params: {\n          key: API_KEY,\n          q: query,\n          image_type: 'photo',\n          orientation: 'horizontal',\n          safesearch: true,\n          page,\n          per_page: perPage,\n        },\n      });\n  \n      return response.data;\n    } catch (error) {\n      console.error('Error fetching images:', error);\n      throw error;\n    }\n  }","import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst gallery = document.querySelector(`.gallery`);\nexport function renderImages(images){\n    gallery.innerHTML = images\n    .map(\n      ({ webformatURL, largeImageURL, tags, likes, views, comments, downloads }) => `\n      <li class=\"gallery-item\">\n        <a href=\"${largeImageURL}\" class=\"gallery-link\">\n          <img src=\"${webformatURL}\" alt=\"${tags}\" class=\"gallery-image\" />\n        </a>\n        <div class=\"info\">\n          <p>‚ù§Ô∏è ${likes}</p>\n          <p>üëÄ ${views}</p>\n          <p>üí¨ ${comments}</p>\n          <p>‚¨áÔ∏è ${downloads}</p>\n        </div>\n      </li>`\n    )\n    .join('');\n\n  const lightbox = new SimpleLightbox('.gallery a');\n  lightbox.refresh();\n}\n\nexport function clearGallery(){\n    gallery.innerHTML = ``;\n}","// import { renderImages } from \"./js/render-functions\";\n// import { fetchImages } from \"./js/pixabay-api\";\n// import iziToast from \"izitoast\";\n// import 'izitoast/dist/css/iziToast.min.css';\n// const form = document.querySelector(`form`);\n// const gallery = document.querySelector(`.gallery`);\n// const loader = document.querySelector(`.loader`);\n// let query = '';\n// let page = 1;\n// const perPage = 15;\n// form.addEventListener(`submit`, async(event)=>{\n//     event.preventDefault();\n\n// searchQuery = event.target.elements[`search-text`].value.trim();\n//     if (!searchQuery){\n//         iziToast.error({title: `Error`, message: `Please enter a search query!`});\n//         return;\n//     }\n\n//     page = 1;\n//     clearGallery();\n//     loadMoreBtn.classList.add('hidden');\n//     loader.classList.add('visible');\n\n\n//     gallery.innerHTML = ``;\n//     loader.classList.add(`visible`);\n//     try{\n//         const images = await fetchImages(query);\n//         console.log(images);\n        \n//         if(images.length === 0){\n//             iziToast.warning({title: `Oops!`, message: `No images found. Try again!`});\n//         }else{\n//             renderImages(images);\n//         }\n//     }catch(error){\n//         iziToast.error({title: `Error`, message: ` Failed to fetch images. Try again later!`});\n//     }finally{\n//         loader.classList.remove(`visible`);\n//     }\n\n// });\n// loadMoreBtn.addEventListener('click', async () => {\n//   page += 1;\n//   loader.classList.add('visible');\n\n//   try {\n//     const images = await fetchImages(query, page, perPage);\n//     if (images.length === 0) {\n//       iziToast.warning({ title: 'Oops!', message: 'No more images found!' });\n//       loadMoreBtn.classList.add('hidden');\n//     } else {\n//       renderImages(images);\n//     }\n//   } catch (error) {\n//     iziToast.error({ title: 'Error', message: 'Failed to fetch more images.' });\n//   } finally {\n//     loader.classList.remove('visible');\n//   }\n// });\n\n\nimport { fetchImages } from './js/pixabay-api.js';\nimport { renderImages, clearGallery } from './js/render-functions.js';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst form = document.querySelector('.form');\nconst gallery = document.querySelector('.gallery');\nconst loader = document.querySelector('.loader');\nconst loadMoreBtn = document.querySelector('.load-more');\n\nlet searchQuery = '';\nlet page = 1;\nconst perPage = 15;\n\nform.addEventListener('submit', async event => {\n  event.preventDefault();\n  \n  searchQuery = event.target.elements['search-text'].value.trim();\n  if (!searchQuery) {\n    iziToast.error({ title: 'Error', message: 'Please enter a search query!' });\n    return;\n  }\n\n  page = 1;\n  clearGallery();\n  loadMoreBtn.classList.add('hidden');\n  loader.classList.add('visible');\n\n  try {\n    const { hits, totalHits } = await fetchImages(searchQuery, page, perPage);\n\n    if (hits.length === 0) {\n      iziToast.warning({ title: 'Oops!', message: 'No images found. Try again!' });\n      return;\n    }\n\n    renderImages(hits);\n    loadMoreBtn.classList.toggle('hidden', totalHits <= perPage);\n  } catch (error) {\n    iziToast.error({ title: 'Error', message: 'Failed to fetch images. Try again later!' });\n  } finally {\n    loader.classList.remove('visible');\n  }\n});\n\nloadMoreBtn.addEventListener('click', async () => {\n  page += 1;\n  loader.classList.add('visible');\n\n  try {\n    const { hits, totalHits } = await fetchImages(searchQuery, page, perPage);\n\n    renderImages(hits);\n\n    if (page * perPage >= totalHits) {\n      loadMoreBtn.classList.add('hidden');\n      iziToast.info({ message: \"We're sorry, but you've reached the end of search results.\" });\n    }\n\n    smoothScroll();\n  } catch (error) {\n    iziToast.error({ title: 'Error', message: 'Failed to load more images.' });\n  } finally {\n    loader.classList.remove('visible');\n  }\n});\n\nfunction smoothScroll() {\n  const { height } = gallery.firstElementChild.getBoundingClientRect();\n  window.scrollBy({ top: height * 2, behavior: 'smooth' });\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"names":["API_KEY","BASE_URL","fetchImages","query","page","perPage","axios","error","gallery","renderImages","images","webformatURL","largeImageURL","tags","likes","views","comments","downloads","SimpleLightbox","clearGallery","form","loader","loadMoreBtn","searchQuery","event","iziToast","hits","totalHits","smoothScroll","height"],"mappings":"owBACA,MAAMA,EAAU,qCACVC,EAAW,2BAEV,eAAeC,EAAYC,EAAOC,EAAO,EAAGC,EAAU,GAAI,CAC7D,GAAI,CAaF,OAZiB,MAAMC,EAAM,IAAIL,EAAU,CACzC,OAAQ,CACN,IAAKD,EACL,EAAGG,EACH,WAAY,QACZ,YAAa,aACb,WAAY,GACZ,KAAAC,EACA,SAAUC,CACX,CACT,CAAO,GAEe,IACjB,OAAQE,EAAO,CACd,cAAQ,MAAM,yBAA0BA,CAAK,EACvCA,CACP,CACL,CCpBA,MAAMC,EAAU,SAAS,cAAc,UAAU,EAC1C,SAASC,EAAaC,EAAO,CAChCF,EAAQ,UAAYE,EACnB,IACC,CAAC,CAAE,aAAAC,EAAc,cAAAC,EAAe,KAAAC,EAAM,MAAAC,EAAO,MAAAC,EAAO,SAAAC,EAAU,UAAAC,CAAS,IAAO;AAAA;AAAA,mBAEjEL,CAAa;AAAA,sBACVD,CAAY,UAAUE,CAAI;AAAA;AAAA;AAAA,kBAG9BC,CAAK;AAAA,kBACLC,CAAK;AAAA,kBACLC,CAAQ;AAAA,kBACRC,CAAS;AAAA;AAAA,YAGtB,EACA,KAAK,EAAE,EAEO,IAAIC,EAAe,YAAY,EACvC,QAAO,CAClB,CAEO,SAASC,GAAc,CAC1BX,EAAQ,UAAY,EACxB,CCwCA,MAAMY,EAAO,SAAS,cAAc,OAAO,EACrCZ,EAAU,SAAS,cAAc,UAAU,EAC3Ca,EAAS,SAAS,cAAc,SAAS,EACzCC,EAAc,SAAS,cAAc,YAAY,EAEvD,IAAIC,EAAc,GACdnB,EAAO,EACX,MAAMC,EAAU,GAEhBe,EAAK,iBAAiB,SAAU,MAAMI,GAAS,CAI7C,GAHAA,EAAM,eAAc,EAEpBD,EAAcC,EAAM,OAAO,SAAS,aAAa,EAAE,MAAM,OACrD,CAACD,EAAa,CAChBE,EAAS,MAAM,CAAE,MAAO,QAAS,QAAS,8BAA8B,CAAE,EAC1E,MACD,CAEDrB,EAAO,EACPe,IACAG,EAAY,UAAU,IAAI,QAAQ,EAClCD,EAAO,UAAU,IAAI,SAAS,EAE9B,GAAI,CACF,KAAM,CAAE,KAAAK,EAAM,UAAAC,GAAc,MAAMzB,EAAYqB,EAAanB,EAAMC,CAAO,EAExE,GAAIqB,EAAK,SAAW,EAAG,CACrBD,EAAS,QAAQ,CAAE,MAAO,QAAS,QAAS,6BAA6B,CAAE,EAC3E,MACD,CAEDhB,EAAaiB,CAAI,EACjBJ,EAAY,UAAU,OAAO,SAAUK,GAAatB,CAAO,CAC5D,MAAe,CACdoB,EAAS,MAAM,CAAE,MAAO,QAAS,QAAS,0CAA0C,CAAE,CAC1F,QAAY,CACRJ,EAAO,UAAU,OAAO,SAAS,CAClC,CACH,CAAC,EAEDC,EAAY,iBAAiB,QAAS,SAAY,CAChDlB,GAAQ,EACRiB,EAAO,UAAU,IAAI,SAAS,EAE9B,GAAI,CACF,KAAM,CAAE,KAAAK,EAAM,UAAAC,GAAc,MAAMzB,EAAYqB,EAAanB,EAAMC,CAAO,EAExEI,EAAaiB,CAAI,EAEbtB,EAAOC,GAAWsB,IACpBL,EAAY,UAAU,IAAI,QAAQ,EAClCG,EAAS,KAAK,CAAE,QAAS,4DAA8D,CAAA,GAGzFG,GACD,MAAe,CACdH,EAAS,MAAM,CAAE,MAAO,QAAS,QAAS,6BAA6B,CAAE,CAC7E,QAAY,CACRJ,EAAO,UAAU,OAAO,SAAS,CAClC,CACH,CAAC,EAED,SAASO,GAAe,CACtB,KAAM,CAAE,OAAAC,CAAQ,EAAGrB,EAAQ,kBAAkB,sBAAqB,EAClE,OAAO,SAAS,CAAE,IAAKqB,EAAS,EAAG,SAAU,QAAQ,CAAE,CACzD"}