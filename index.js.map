{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from \"axios\";\nconst API_KEY = `49323961-66159e96cf1899f53bae32983`;\nconst BASE_URL = `https://pixabay.com/api/`;\n\nexport async function fetchImages(query, page = 1, perPage = 15) {\n    try {\n      const response = await axios.get(BASE_URL, {\n        params: {\n          key: API_KEY,\n          q: query,\n          image_type: 'photo',\n          orientation: 'horizontal',\n          safesearch: true,\n          page,\n          per_page: perPage,\n        },\n      });\n  \n      return response.data;\n    } catch (error) {\n      console.error('Error fetching images:', error);\n      throw error;\n    }\n  }","import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst gallery = document.querySelector('.gallery');\nconst lightbox = new SimpleLightbox('.gallery a');\n\nexport function renderImages(images) {\n    const markup = images\n        .map(\n            ({ webformatURL, largeImageURL, tags, likes, views, comments, downloads }) => `\n            <li class=\"gallery-item\">\n                <a href=\"${largeImageURL}\" class=\"gallery-link\">\n                    <img src=\"${webformatURL}\" alt=\"${tags}\" class=\"gallery-image\" />\n                </a>\n                <div class=\"info\">\n                    <p>‚ù§Ô∏è ${likes}</p>\n                    <p>üëÄ ${views}</p>\n                    <p>üí¨ ${comments}</p>\n                    <p>‚¨áÔ∏è ${downloads}</p>\n                </div>\n            </li>`\n        )\n        .join('');\n\n    gallery.insertAdjacentHTML('beforeend', markup);\n    lightbox.refresh();\n}\n\nexport function clearGallery() {\n    gallery.innerHTML = '';\n}","import { fetchImages } from './js/pixabay-api.js';\nimport { renderImages, clearGallery } from './js/render-functions.js';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nconst form = document.querySelector('.form');\nconst gallery = document.querySelector('.gallery');\nconst loader = document.querySelector('.loader');\nconst loadMoreBtn = document.querySelector('.load-more');\n\nlet query = '';\nlet page = 1;\nconst perPage = 15;\n\nform.addEventListener('submit', async (event) => {\n  event.preventDefault();\n  query = event.target.elements['search-text'].value.trim();\n  \n  if (!query) {\n    iziToast.error({ title: 'Error', message: 'Please enter a search query!' });\n    return;\n  }\n\n  gallery.innerHTML = '';\n  page = 1;\n  loadMoreBtn.style.display = 'none';\n  loader.classList.add('visible');\n\n  try {\n    const { hits, totalHits } = await fetchImages(query, page, perPage);\n    if (hits.length === 0) {\n      iziToast.warning({ title: 'Oops!', message: 'No images found. Try again!' });\n    } else {\n      renderImages(hits);\n      loadMoreBtn.style.display = hits.length < totalHits ? 'block' : 'none';\n    }\n  } catch (error) {\n    iziToast.error({ title: 'Error', message: 'Failed to fetch images. Try again later!' });\n  } finally {\n    loader.classList.remove('visible');\n  }\n});\n\nloadMoreBtn.addEventListener('click', async () => {\n  page += 1;\n  loader.classList.add('visible');\n  \n  try {\n    const { hits, totalHits } = await fetchImages(query, page, perPage);\n    renderImages(hits, true);\n    \n    if (page * perPage >= totalHits) {\n      loadMoreBtn.style.display = 'none';\n      iziToast.info({ message: \"We're sorry, but you've reached the end of search results.\" });\n    }\n  } catch (error) {\n    iziToast.error({ title: 'Error', message: 'Failed to fetch more images. Try again later!' });\n  } finally {\n    loader.classList.remove('visible');\n  }\n});\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"names":["API_KEY","BASE_URL","fetchImages","query","page","perPage","axios","error","gallery","lightbox","SimpleLightbox","renderImages","images","markup","webformatURL","largeImageURL","tags","likes","views","comments","downloads","form","loader","loadMoreBtn","event","iziToast","hits","totalHits"],"mappings":"owBACA,MAAMA,EAAU,qCACVC,EAAW,2BAEV,eAAeC,EAAYC,EAAOC,EAAO,EAAGC,EAAU,GAAI,CAC7D,GAAI,CAaF,OAZiB,MAAMC,EAAM,IAAIL,EAAU,CACzC,OAAQ,CACN,IAAKD,EACL,EAAGG,EACH,WAAY,QACZ,YAAa,aACb,WAAY,GACZ,KAAAC,EACA,SAAUC,CACX,CACT,CAAO,GAEe,IACjB,OAAQE,EAAO,CACd,cAAQ,MAAM,yBAA0BA,CAAK,EACvCA,CACP,CACL,CCpBA,MAAMC,EAAU,SAAS,cAAc,UAAU,EAC3CC,EAAW,IAAIC,EAAe,YAAY,EAEzC,SAASC,EAAaC,EAAQ,CACjC,MAAMC,EAASD,EACV,IACG,CAAC,CAAE,aAAAE,EAAc,cAAAC,EAAe,KAAAC,EAAM,MAAAC,EAAO,MAAAC,EAAO,SAAAC,EAAU,UAAAC,CAAS,IAAO;AAAA;AAAA,2BAE/DL,CAAa;AAAA,gCACRD,CAAY,UAAUE,CAAI;AAAA;AAAA;AAAA,4BAG9BC,CAAK;AAAA,4BACLC,CAAK;AAAA,4BACLC,CAAQ;AAAA,4BACRC,CAAS;AAAA;AAAA,kBAG5B,EACA,KAAK,EAAE,EAEZZ,EAAQ,mBAAmB,YAAaK,CAAM,EAC9CJ,EAAS,QAAO,CACpB,CCtBA,MAAMY,EAAO,SAAS,cAAc,OAAO,EACrCb,EAAU,SAAS,cAAc,UAAU,EAC3Cc,EAAS,SAAS,cAAc,SAAS,EACzCC,EAAc,SAAS,cAAc,YAAY,EAEvD,IAAIpB,EAAQ,GACRC,EAAO,EACX,MAAMC,EAAU,GAEhBgB,EAAK,iBAAiB,SAAU,MAAOG,GAAU,CAI/C,GAHAA,EAAM,eAAc,EACpBrB,EAAQqB,EAAM,OAAO,SAAS,aAAa,EAAE,MAAM,OAE/C,CAACrB,EAAO,CACVsB,EAAS,MAAM,CAAE,MAAO,QAAS,QAAS,8BAA8B,CAAE,EAC1E,MACD,CAEDjB,EAAQ,UAAY,GACpBJ,EAAO,EACPmB,EAAY,MAAM,QAAU,OAC5BD,EAAO,UAAU,IAAI,SAAS,EAE9B,GAAI,CACF,KAAM,CAAE,KAAAI,EAAM,UAAAC,GAAc,MAAMzB,EAAYC,EAAOC,EAAMC,CAAO,EAC9DqB,EAAK,SAAW,EAClBD,EAAS,QAAQ,CAAE,MAAO,QAAS,QAAS,6BAA6B,CAAE,GAE3Ed,EAAae,CAAI,EACjBH,EAAY,MAAM,QAAUG,EAAK,OAASC,EAAY,QAAU,OAEnE,MAAe,CACdF,EAAS,MAAM,CAAE,MAAO,QAAS,QAAS,0CAA0C,CAAE,CAC1F,QAAY,CACRH,EAAO,UAAU,OAAO,SAAS,CAClC,CACH,CAAC,EAEDC,EAAY,iBAAiB,QAAS,SAAY,CAChDnB,GAAQ,EACRkB,EAAO,UAAU,IAAI,SAAS,EAE9B,GAAI,CACF,KAAM,CAAE,KAAAI,EAAM,UAAAC,GAAc,MAAMzB,EAAYC,EAAOC,EAAMC,CAAO,EAClEM,EAAae,EAAM,EAAI,EAEnBtB,EAAOC,GAAWsB,IACpBJ,EAAY,MAAM,QAAU,OAC5BE,EAAS,KAAK,CAAE,QAAS,4DAA8D,CAAA,EAE1F,MAAe,CACdA,EAAS,MAAM,CAAE,MAAO,QAAS,QAAS,+CAA+C,CAAE,CAC/F,QAAY,CACRH,EAAO,UAAU,OAAO,SAAS,CAClC,CACH,CAAC"}